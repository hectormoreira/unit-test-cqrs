// <auto-generated />
using System;
using Education.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Education.Persistence.Migrations
{
    [DbContext(typeof(EducationDbContext))]
    [Migration("20220115003925_EducationMigration")]
    partial class EducationMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Education.Domain.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<DateTime?>("PublishOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = new Guid("356c4854-40e4-4c84-aa11-e22616b00d81"),
                            CreatedOn = new DateTime(2022, 1, 14, 19, 39, 25, 586, DateTimeKind.Local).AddTicks(5188),
                            Description = "Curso de C#",
                            Price = 100m,
                            PublishOn = new DateTime(2024, 1, 14, 19, 39, 25, 586, DateTimeKind.Local).AddTicks(5201),
                            Title = "Curso de C# Avanzado"
                        },
                        new
                        {
                            CourseId = new Guid("bcae0f48-8fb2-47d0-a8ee-cc24974b4c17"),
                            CreatedOn = new DateTime(2022, 1, 14, 19, 39, 25, 586, DateTimeKind.Local).AddTicks(5243),
                            Description = "Curso de React Native",
                            Price = 40m,
                            PublishOn = new DateTime(2024, 1, 14, 19, 39, 25, 586, DateTimeKind.Local).AddTicks(5244),
                            Title = "Curso de React Native Avanzado"
                        },
                        new
                        {
                            CourseId = new Guid("c7312d8c-5708-41c3-bd27-c662c1c74f52"),
                            CreatedOn = new DateTime(2022, 1, 14, 19, 39, 25, 586, DateTimeKind.Local).AddTicks(5262),
                            Description = "Master en Unit Test",
                            Price = 1000m,
                            PublishOn = new DateTime(2024, 1, 14, 19, 39, 25, 586, DateTimeKind.Local).AddTicks(5263),
                            Title = "Curso de Unit Test Avanzado"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
